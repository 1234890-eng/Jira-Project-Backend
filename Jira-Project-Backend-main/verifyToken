const jwt = require('jsonwebtoken');

// Middleware to verify the JWT token
const verifyToken = (req, res, next) => {
  // Check if authorization header is provided
  const authHeader = req.headers.authorization;

  if (!authHeader || !authHeader.startsWith("Bearer ")) {
    return res.status(401).json({ error: 'Unauthorized, token is required' });
  }

  // Extract the token from the Authorization header
  const token = authHeader.split(" ")[1];

  try {
    // Verify the token using the secret key
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    
    // Attach decoded user data to the request object (clientId, userId, etc.)
    req.user = decoded;

    // Pass control to the next middleware/route handler
    next();
  } catch (err) {
    // If token is invalid or expired
    res.status(401).json({ error: 'Invalid or expired token' });
  }
};

module.exports = verifyToken;
